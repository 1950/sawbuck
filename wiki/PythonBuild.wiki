#summary Python build and develoment process.

Inside the Debug/Release directory we effectively create a new python deployment (through virtualenv magic) and stock it with the external modules we rely on.

Our modules and scripts are then built to eggs which are placed in the Debug/Release directory.
To use the scripts or modules, after building them, you can do something like this:

<code>> Debug\py\Scripts\easy_install benchmark-chrome</code>

This will install the benchmark module and its dependencies to the python installation. 
To subsequently use the script, you can do:

<code>> Debug\py\Scripts\benchmark <parameters></code>

During development, it's easier to build all the dependencies, then to do something like this:

<code>
> Debug\py\Scripts\activate
(py) > python scripts\benchmark\setup.py develop
(py) > python scripts\benchmark\benchmark.py <parameters>
</code>

The "activate" invocation will change your path, so that the correct python interpreter is the default, and the "develop" command to setup.py will install the benchmark module in development mode - e.g. in-place to the interpreter.

For any future scripts we create, please make sure you write a setup.py. Use setuptools, and add build configuration to make sure they're built to egg on the continuous builder, as otherwise they tend to bitrot.